const questions = [
	{
		question: "–ö–∞–∫–æ–π —è–∑—ã–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ?",
		answers: ["Java", "C", "Python", "JavaScript"],
		correct: 4,
	},
	{
		question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç CSS?",
		answers: [
			"Central Style Sheets",
			"Cascading Style Sheets",
			"Cascading Simple Sheets",
			"Cars SUVs Sailboats",
		],
		correct: 2,
	},
	{
		question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç HTML?",
		answers: [
			"Hypertext Markup Language",
			"Hypertext Markdown Language",
			"Hyperloop Machine Language",
			"Helicopters Terminals Motorboats Lamborginis",
		],
		correct: 1,
	},
	{
		question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª —Å–æ–∑–¥–∞–Ω JavaScript?",
		answers: ["1996", "1995", "1994", "–≤—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ"],
		correct: 2,
	},
	{
		question: "–ö–∞–∫ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ä–æ–¥–∏—Ç–µ–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞?",
		answers: ["elem.parent()", "e.parent('selector')", "element.closest('selector')", "–≤—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ"],
		correct: 3,
	},
];

const headerContainer = document.getElementById('header');
const listContainer = document.getElementById('list');
const btnSubmit = document.getElementById('submit');

let questionIndex = 0;
let score = 0;

clearPage();
showQuestion();
btnSubmit.onclick = checkAnswer;
list.onclick = showAnswerCorrect;

//–æ—á–∏—Å—Ç–∫–∞ HTML
function clearPage() {
	headerContainer.innerHTML = '';
	listContainer.innerHTML = '';
};

// –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
function showQuestion() {
	// questions[questionIndex]['question'];

	const headerTemplate = `<h2 class="title">%title%</h2>`;
	const title = headerTemplate.replace('%title%', questions[questionIndex]['question']);
	headerContainer.innerHTML = title;

	for ([index, answer] of questions[questionIndex]['answers'].entries()) {
		
		const questionTemplate = `<li class="list">
									<label>
										<input value="%number%" type="radio" class="answer" name="answer" />
										<span>%answer%</span>
									</label>
								 </li>`;

		const answerHTML = questionTemplate
									.replace('%answer%', answer)
									.replace('%number%', index + 1);

		listContainer.innerHTML += answerHTML;
	};

};

function checkAnswer() {
	
	const checkedRadio = listContainer.querySelector('input[type="radio"]:checked');

	if (!checkedRadio) {
		btnSubmit.blur();
		return
	};
	const userAnswer = parseInt(checkedRadio.value);

	if (userAnswer === questions[questionIndex]['correct']) {
		score++;
	};

	if (questionIndex !== questions.length - 1) {
		questionIndex++;
		clearPage();
		showQuestion();
	} else {
		clearPage();
		showResults();
	}; 

};

function showAnswerCorrect() {

		const checkedRadio = listContainer.querySelector('input[type="radio"]:checked');
		const list = checkedRadio.closest('.list');
		const userAnswer = parseInt(checkedRadio.value);
		if (userAnswer === questions[questionIndex]['correct']) {
			list.classList.toggle('shake');
		} else {
			list.classList.toggle('shake-no');
		};
};

function showResults() {
	const resultsTemplate = `
								<h2 class="title">%title%</h2>
								<h3 class="summary">%message%</h3>
								<p class="result">%result%</p>
							`;
	let title, message;

	if (score === questions.length) {
		title = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üçª üéâ üèÜ';
		message = '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã! üíØ';
	} else if ((score * 100) / questions.length >= 50) {
		title = '–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üòâ üëç';
		message = '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å –≤–æ–ø—Ä–æ—Å–æ–≤!';
	} else {
		title = '–°—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è! üòê üê£';
		message = '–ü–æ–∫–∞ —É –≤–∞—Å –º–µ–Ω—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.';
	}

	let result = `${score} –∏–∑ ${questions.length}`;

	const finalMessage = resultsTemplate
									.replace('%title%', title)
									.replace('%message%', message)
									.replace('%result%', result);

	headerContainer.innerHTML = finalMessage;

	btnSubmit.blur();
	btnSubmit.innerText = '–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ';
	btnSubmit.onclick = () => history.go();
};

